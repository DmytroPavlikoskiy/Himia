version: '3'

services:
  web:
    command: gunicorn HimiaSite.wsgi:application --bind 0.0.0.0:8080
    container_name: webHimiaSite
    build:
      context: .
      dockerfile: docker/python/Dockerfile
    volumes:
      - ./HimiaSite:/HimiaSite
    expose:
      - 8080
#    environment:
#      - CELERY_BROKER=redis://redis:6379/0
#      - CELERY_BACKEND=redis://redis:6379/0
    networks:
      - app
    depends_on:
      - db
      - redis
    links:
      - db

  db:
    image: mysql:8.1.0
    ports:
      - '3301:3306'
    environment:
          MYSQL_DATABASE: 'himia'
          MYSQL_PASSWORD: 'root'
          MYSQL_ROOT_PASSWORD: 'root'
    volumes:
      - ./docker/mysql/data:/var/lib/mysql
      - ./docker/mysql/backups:/backups
    networks:
      - app

  nginx:
      container_name: "nginxHimiaSite"
      image: nginx:alpine
      volumes:
        - .:/var/www/html
        - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      ports:
        - 2000:80
      depends_on:
        - web
        - db
      networks:
        - app

  redis:
    container_name: "redisHimiaSite"
    image: "redis:alpine"
    restart: always
    networks:
      - app

  celery:
    container_name: "celeryHimiaSite"
    build:
      context: .
      dockerfile: docker/python/Dockerfile
    hostname: celery
    volumes:
      - ./HimiaSite:/HimiaSite
    command: celery -A HimiaSite beat -l info #mb INFO
    depends_on:
      - web
      - redis
    networks:
      - app

  worker:
    container_name: "workerHimiaSite"
    build:
      context: .
      dockerfile: docker/python/Dockerfile
    hostname: celery
    volumes:
      - ./HimiaSite:/HimiaSite
    command: celery -A HimiaSite worker -l info #mb INFO
    depends_on:
      - web
      - redis
    links:
      - celery
    networks:
      - app

networks:
  app:
    driver: bridge